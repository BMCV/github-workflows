on:
  workflow_call:
    inputs:
      init:
        type: string
        default: |
          import os
          import re
          import sys

          semester = os.environ['SEMESTER']
          try:
              term = re.match(r'^(?:[ws]{2})-?(?:20)?([0-9]{2})$', semester).group(1)
              term = int(term)
          except AttributeError:
              print(f'Malformed semester name: "{semester}"')
              sys.exit(1)

          preamble_filename = 'assignments/preamble.sty'
          with open(preamble_filename) as fp:
              preamble = fp.read()

          def get_substitution(tex):
              match = re.search(r'\\courseterm\{(.*?)([0-9]{2})/(20)?[0-9]{2}\}', tex)
              token = match.group(0)
              replacement = r'\courseterm{' + match.group(1) + str(term) + '/' + match.group(3) + str(term + 1) + '}'
              return token, replacement

          token, replacement = get_substitution(preamble)
          preamble = preamble.replace(token, replacement)
          assert get_substitution(preamble)[0] == replacement

          with open(preamble_filename, 'w') as fp:
              fp.write(preamble)
        required: true
      semester:
        description: Either `ws` for winter semester or `ss` for summer semester.
        type: string
        required: true
      label_color:
        description: The color of the semester label.
        default: FFFFFF

jobs:
  create_future_branch:
    name: Create future branch
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: github.repository_owner == 'BMCV'
    steps:

      - uses: actions/checkout@v4

      - uses: kostrykin/current-semester-action@v0.1
        id: semester
        with:
          which: next
          floor: ${{ inputs.semester }}

      - run: ${{ inputs.init }}
        shell: python
        env:
          SEMESTER: ${{ steps.semester.outputs.name }}

      - name: Create label
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: '${{ steps.semester.outputs.description }}',
              color: '${{ inputs.label_color }}'
            });

      - uses: kostrykin/autobump@master
        with:
          branch: future/${{ steps.branch.outputs.name }}
          glob: ''
          labels: ${{ steps.semester.outputs.description }}